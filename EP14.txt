import React, { useState } from "react";
import {login, logout} from '../store';
import {useDispatch, useSelector} from 'react-redux';

export const Login = () => {
    const [newUsername, setNewUsername] = useState<string>("");
    const dispatch = useDispatch();
    const username = useSelector((state: any) => state.user.value.username);
    return(
        <h1>
            {username}
            <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => {
                setNewUsername(e.target.value);
            }} type="text" />
            <button onClick={() => dispatch(login({username: newUsername}))}>Submit</button>
            <button onClick={() => dispatch(logout())}>Logout</button>
        </h1>
    );
};




import {useSelector} from 'react-redux';
export const Home = () => {
    const username = useSelector((state: any) => state.user.value.username);
    return(
        <h1>This is the Home page {username}</h1>
    );
};



import React, { useState } from "react";
import {login, logout} from '../store';
import {useDispatch, useSelector} from 'react-redux';

export const Login = () => {
    const [newUsername, setNewUsername] = useState<string>("");
    const dispatch = useDispatch();
    const username = useSelector((state: any) => state.user.value.username);
    return(
        <h1>
            {username}
            <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => {
                setNewUsername(e.target.value);
            }} type="text" />
            <button onClick={() => dispatch(login({username: newUsername}))}>Submit</button>
            <button onClick={() => dispatch(logout())}>Logout</button>
        </h1>
    );
};




export const Contact = () => {
    return(
        <h1>This is the Contact page</h1>
    );
};




import { configureStore, createSlice, PayloadAction } from "@reduxjs/toolkit";

interface UserStateValue {
    username: string;
}

interface UserState {
    value: UserStateValue;
}

const initialState = {value: {username: ""} } as UserState;
const userSlice = createSlice({
    name: 'user',
    initialState,
    reducers : {
        login: (state: UserState, action: PayloadAction<UserStateValue>) => {
            state.value = action.payload;
        },

        logout: (state: UserState) => {
            state.value = initialState.value;
        },
    },
});


export const {login, logout} = userSlice.actions;
export const store = configureStore({
    reducer: {
        user: userSlice.reducer,
    },
});